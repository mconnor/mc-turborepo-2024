---
import type { HTMLAttributes } from 'astro/types';
import Link from '@components/Link.astro';

interface Props extends HTMLAttributes<'div'> {}

const { ...rest } = Astro.props;

const path = Astro.url.pathname;
// type Props = Record<string, never>
---

<style>
  .currentTab {
    background-color: var(--brand);
    color: var(--text-1);
    cursor: pointer;

    pointer-events: none;
    text-shadow: 0 0 1px var(--surface-3);
  }
  #menu__toggle {
    display: none;

    &:checked + .menu__btn {
      & span {
        transform: rotate(45deg);
      }
      & span::before {
        /* top: 0; */
        transform: rotate(0);
      }
      & span::after {
        /* top: 0; */
        transform: rotate(90deg);
      }
    }
  }

  .hamburger-menu {
    /* display: grid;
    grid-template-columns: 1fr; */

    position: relative;
    & .menu__btn {
      /* display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: min-content, min-content, min-content; */

      display: flex;
      flex-direction: column;
      row-gap: var(--size-1);

      /* align-items: center;
      justify-content: center; */
      position: static;

      user-select: none;

      :is(span),
      :is(span)::before,
      :is(span)::after {
        /* display: block; */
        width: var(--size-5);
        height: var(--size-1);
        transition: transform 0.4s cubic-bezier(0.54, -0.81, 0.57, 0.57);
        content: '';
        background-color: var(--brand);
      }

      :is(span)::before,
      :is(span)::after {
        content: '';
        display: block;
        position: absolute;
        z-index: 2;
      }

      :is(span)::before {
        top: 25%;
      }
      :is(span)::after {
        bottom: 25%;
      }

      @media (width>=630px) {
        display: none;
      }
    }
  }

  .menu__box {
    display: none;
    list-style: none;
    position: relative;
    list-style-position: outside;

    row-gap: var(--size-1);

    padding-inline: 0;
    font-weight: var(--font-weight-9);
    & li {
      white-space: nowrap;

      & > a {
        color: var(--brand);
        padding-inline: var(--size-3);
        padding-block: var(--size-2);
        border-radius: var(--radius-3);
        text-decoration: none;
        outline-offset: 3px;
        /* transition:
          background-color 0.2s var(--ease-3),
          color 0.2s var(--ease-3); */
        &:hover {
          background-color: var(--surface-3);
          color: var(--text1);
          /* font-weight: var(--font-weight-6); */
          text-decoration: none;
          text-shadow: 0 0 1px var(--brand);
        }
        &:visited {
          color: red;
        }
        &:active {
          color: green;
        }
      }
    }
    @media (width>=630px) {
      display: flex;
      flex-direction: row;
      justify-content: space-around;
      position: static;

      /* background: none; */
    }
  }
</style>

<div {...rest}>
  <nav class="hamburger-menu" aria-labelledby="header-navigation">
    <input id="menu__toggle" type="checkbox" />
    <label class="menu__btn" for="menu__toggle">
      <span></span>
    </label>

    <ul class="menu__box" role="tablist">
      <li role="tab">
        <Link class:list={[{ currentTab: path === '/' }]} href="/"> Home </Link>
      </li>
      <li role="tab">
        <Link class:list={[{ currentTab: path === '/about/' }]} href="/about/">
          About
        </Link>
      </li>
      <li role="tab">
        <Link
          class:list={[{ currentTab: path === '/kitchensink/' }]}
          href="/kitchensink/"
        >
          Kitchen Sink
        </Link>
      </li>
      <li role="tab">
        <Link class:list={[{ currentTab: path === '/blog/' }]} href="/blog/">
          Blog
        </Link>
      </li>
      <li role="tab">
        <Link class:list={[{ currentTab: path === '/tags/' }]} href="/tags/">
          Tags
        </Link>
      </li>
    </ul>
  </nav>
</div>
